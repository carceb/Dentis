@model Dentis.Models.BudgetViweModel
@{
  Layout = "";
  List<BudgetViweModel> modelList = new List<BudgetViweModel>();
  ViewBag.Lista = modelList;
}
<!DOCTYPE HTML>
<html>
	  <head>
		<title>Dentis</title>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
		<link rel="stylesheet" href="~/assets/css/main.css" />
		<noscript><link rel="stylesheet" href= "~/assets/css/noscript.css" /></noscript>
	  </head>
	<body class="is-preload">
	@using(Html.BeginForm("Add", "Budget", FormMethod.Post))
	{
		<!-- Wrapper -->
		<div id="wrapper">

			<!-- Header -->
			  <header id="header">
				<div class="inner">

				  <!-- Logo -->
					<a href="index.html" class="logo">
					  <span class="symbol"><img src="~/images/logo.svg" alt="" /></span><span class="title">Dentis</span>
					  <br />
					  <span class="title">@ViewBag.ConsultingName</span>
					</a>
				</div>
				<!-- Nav -->
				  <nav>
					<ul>
					  <li><a href="#menu">Menu</a></li>
					</ul>
				  </nav>
			  </header>

			<!-- Menu -->
			  <nav id="menu">
				<h2>Menu</h2>
				<ul>
				  <li>@Html.ActionLink("Seleccionar cliente","SelectClient","Client")</li>
				  <li>@Html.ActionLink("Registrar paciente", "Add", "PatientRegistration")</li>
				  <li>@Html.ActionLink("Pacientes en cola", "Index", "Queue")</li>
				  <li>@Html.ActionLink("Seleccionar consultorio", "Index", "ConsultingSelection")</li>
				</ul>
			  </nav> 

				<!-- Main -->
			<div id="main">
				<div class="inner">
					<!-- Form -->
						<section>
						    <h2>Realizar presupuesto</h2>
						    <div class="row gtr-uniform">
							    <div class="col-12">
								    <strong>Ciente:&nbsp;&nbsp;</strong>
								    @Html.ActionLink((string)ViewBag.ClientName,"Edit", "Client", new { clientId = ViewBag.ClientId}, null)
                                    <br/>
								    <strong>Total presupuesto:</strong><label id="txtTotal" text ="0">0</label>
							    </div>
							    <div class="col-6 col-12-xsmall">
								    <strong>Cuadrante:</strong>
								    @Html.HiddenFor(t => t.ClientId)
								    @Html.HiddenFor(t => t.BudgetId)
								    @Html.HiddenFor(t => t.ClinicConsultingId)
								    @Html.DropDownListFor(t => t.QuadrantId, (SelectList)ViewBag.Quadrant, "-- Seleccione el cuadrante --")
							    </div>
							    <div class="col-6 col-12-xsmall">
								    <strong>Diente:</strong>
								    @Html.DropDownListFor(t => t.QuadrantToothId, (SelectList)ViewBag.QuadrantTooth, "-- Seleccione el diente --")
							    </div>
							    <div class="col-12">
								    <strong>Procedimiento:</strong>
								    @Html.DropDownListFor(t => t.ProcedureId, (SelectList)ViewBag.ProcedureName, "-- Seleccione el procedimiento --")
							    </div>
							    <div class="col-12">
								    @Html.TextAreaFor(x => x.Observation, new { placeholder = "Observaciones"})
							    </div>
							    <div class="col-6 col-12-xsmall">
								    <strong>Costo:</strong>
								    @Html.TextBoxFor(x => x.Cost, new {maxlength = "7", placeholder = "Costo", onclick= "$(this).select();", onkeypress="return isNumberKey(event)"})
								    <span asp-validation-for="Cost" class="text-danger"></span>
							    </div>
							    <div class="col-12">
							    <br />
							    <ul class="actions">
								    <li><input type="button" id="btnAdd" value="Agregar a la lista"/></li>
								    <li><input type="button" id="btnSave" class="primary" value="Imprmir presupuesto" /></li>
							    </ul>
							    </div>
						    </div>
						    <br />

							<div class="table-wrapper">
							<table id="tblCustomers" >
								<thead>
								<tr>
									<th>Cuadrante</th>
									<th>Diente</th>
									<th>Procedimiento</th>
									<th>Observación</th>
									<th>Costo</th>
									<th></th>
								</tr>
								</thead>
								<tbody>
								@{
									int counter = 0;
								}
								@foreach (var queue in modelList)
								{
									counter++; 
									<tr>
									<td>@queue.QuadrantName</td>                            
									<td>@queue.ToothNumber</td>                           
									<td>@queue.ProcedureName</td>                           
									<td>@queue.Observation</td>                       
									<td>@queue.Cost</td>                        
									<td><input type="button" value="Remove" onclick="Remove(this)"/></td>
									</tr>
								}
								</tbody>
							</table>
							</div>


						</section>
				</div>
			</div>

			<!-- Footer -->
				<footer id="footer">
					<div class="inner">
					</div>
				</footer>
		</div>	
	}
    <!-- Scripts -->
      <script src="~/assets/js/jquery.min.js"></script>
      <script src="~/assets/js/browser.min.js"></script>
      <script src="~/assets/js/breakpoints.min.js"></script>
      <script src="~/assets/js/util.js"></script>
      <script src="~/assets/js/main.js"></script>
      @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
      <script src="~/assets/js/jquery.min.js" type="text/javascript"></script>  
      <script type="text/javascript">
      //Global Functions
        var total = "0";

        function isNumberKey(evt)
        {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            if(charCode == 44){
                return true;
            }
            if (charCode != 46 && charCode > 31 
            && (charCode < 48 || charCode > 57))
                return false;

            return true;
        }
        function Remove(button) {
          //Determine the reference of the Row using the Button.
          var row = $(button).closest("TR");
          var name = $("TD", row).eq(0).html();
          var cost = parseFloat($("TD", row).eq(4).html());
          if (confirm("¿Desea eliminar el renglón: " + name +"?")) {
            //Get the reference of the Table.
            var table = $("#tblCustomers")[0];
 
            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);
            total = parseFloat(total) - parseFloat(cost);
            $("#txtTotal").empty();
            $("#txtTotal").append(new Intl.NumberFormat("de-DE").format(total));
          }
        };
        $(document).ready(function () {  
          $("#QuadrantId").change(function () {  
            $("#QuadrantToothId").empty();  
            $.ajax({  
              type: 'POST',  
              url: '@Url.Action("GetQuadrantTooth")',
       
              dataType: 'json',  
       
              data: { quadrantToothId: $("#QuadrantId").val() },   
       
              success: function (quadrantTooths) {  
       
                $.each(quadrantTooths, function (i, quadrantTooth) {  
                $("#QuadrantToothId").append('<option value="' + quadrantTooth.value + '">' +    
                   quadrantTooth.text + '</option>');                                                                                                  
      
                });  
              },  
              error: function (ex) {  
                alert('No se pudieron obtener los quadrantes.' + ex);  
              }  
            });  
            return false;  
          }) 

          //Dynamic Table
           $("body").on("click", "#btnAdd", function () {
            var txtQuadrant = $("#QuadrantId option:selected");
            var txtTooth = $("#QuadrantToothId option:selected");
            var txtProcedure = $("#ProcedureId option:selected");         
            var txtObservation = $("#Observation");
            var txtCost = $("#Cost");
            var txtQuadrantId = $("#QuadrantId");
            var txtQuadrantToothId = $("#QuadrantToothId");
            var txtProcedureId = $("#ProcedureId");

            if(txtQuadrantId.val() == ""){
                alert("Debe seleccionar el cuadrante y presionar agregar a la lista");
                return;
            }

            if(txtQuadrantToothId.val() == ""){
                alert("Debe seleccionar el diente y presionar agregar a la lista");
                return;
            }

            if(txtProcedureId.val() == ""){
                alert("Debe seleccionar el procedimiento y presionar agregar a la lista");
                return;
            }

            if(txtCost.val() == "" || txtCost.val() == "0"){
                alert("Debe colocar el costo y presionar agregar a la lista");
                return;
            }
 
            //Get the reference of the Table's TBODY element.
            var tBody = $("#tblCustomers > TBODY")[0];
 
            //Add Row.
            var row = tBody.insertRow(-1);

            //Add Quadrant cell.
            cell = $(row.insertCell(-1));
            cell.html(txtQuadrant.text());

            //Add Tooth cell.
            cell = $(row.insertCell(-1));
            cell.html(txtTooth.text());
 
            //Add Procedure cell.
            cell = $(row.insertCell(-1));
            cell.html(txtProcedure.text());
 
            //Add Observation cell.
            var cell = $(row.insertCell(-1));
            cell.html(txtObservation.val());

            //Add Cost cell.
            var cell = $(row.insertCell(-1));
            cell.html(txtCost.val());

            //Add QuadrantId cell.
            var cell = $(row.insertCell(-1));
            cell.html(txtQuadrantId.val());
            cell.hide();

            //Add QuadrantToothId cell
            var cell = $(row.insertCell(-1));
            cell.html(txtQuadrantToothId.val());
            cell.hide();

            //Add ProcedureId cell
            var cell = $(row.insertCell(-1));
            cell.html(txtProcedureId.val());
            cell.hide();

            //Add ClientId cell
            var cell = $(row.insertCell(-1));
            cell.html(@Model.ClientId.ToString());
            cell.hide();

            //Add ClinicConsultingId cell
            var cell = $(row.insertCell(-1));
            cell.html(@Model.ClinicConsultingId.ToString());
            cell.hide();            
 
            //Add Button cell.
            cell = $(row.insertCell(-1));
            var btnRemove = $("<input />");
            btnRemove.attr("type", "button");
            btnRemove.attr("onclick", "Remove(this);");
            btnRemove.val("Eliminar");
            cell.append(btnRemove);

            //Clear the TextBoxes.
            txtObservation.val("");

            total = parseFloat(total) +  parseFloat($("#Cost").val());
            $("#txtTotal").empty();
            $("#txtTotal").append(new Intl.NumberFormat("de-DE").format(total));
          });

          var updated = "false";
          $("body").on("click", "#btnSave", function () {
            var customers = new Array();
            $("#tblCustomers TBODY TR").each(function () {
              var row = $(this);
              var customer = {};
              customer.Name = row.find("TD").eq(0).html();
              customer.Country = row.find("TD").eq(1).html();
              customer.Observation = row.find("TD").eq(3).html();
              customer.Cost = row.find("TD").eq(4).html();
              customer.QuadrantId = row.find("TD").eq(5).html();
              customer.QuadrantToothId = row.find("TD").eq(6).html();
              customer.ProcedureId = row.find("TD").eq(7).html();
              customer.ClientId = row.find("TD").eq(8).html();
              customer.ClinicConsultingId = row.find("TD").eq(9).html();
              customers.push(customer);
              updated = "true";
            });

            $.ajax({
              type: "POST",
              dataType: 'json',  
              url:  '@Url.Action("AddBudget", "Budget")',
              data: { customers: JSON.stringify(customers)}, 
              success: function (r) {
                if(r > 0){
                  var url = '@Url.Action("PrintBudget", "Budget")';
                  url += '?budgetId=' + r + '&clinicConsultingId=' + @Model.ClinicConsultingId;
                  window.location.href = url;
                }             
              }
            });
                if(updated =="false"){
                    alert("Debe agregar items a la lista para poder generar el presupuesto")
                }
            });  
         });

      </script>   
	</body>
</html>

